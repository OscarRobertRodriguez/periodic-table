

.element {

  &__block {

    display: grid;
    height: 100%;
    width: 100%;
    grid-template-rows: repeat(4, min-content);
    color: grey;
    cursor: pointer;
    transition: all 500ms ease-in-out;
    filter: brightness(1.5);
    z-index: 1;

    @include mq(medium) {
      height: 130px;
      grid-template-rows: auto;
      align-items: center;
    }


    h3 {
     font-size: .7vw;
      text-transform: capitalize;
      letter-spacing: .2px;
      opacity: .9;
      cursor: pointer;
      @include mq(medium) {
        font-size: 1.5rem;
        letter-spacing: 1px;
      }

      @include mq(small) {
        font-size: 1.5rem;

      }
    }

    h2 {
      font-size: .8vw;
      padding: 0;
      text-transform: capitalize;
      cursor: pointer;
      @include mq(medium) {
        font-size: 1.8rem;
      }

      @include mq(small) {
        font-size: 2rem;
      }
    }

    small {
     font-size: .8vw;
      padding: 0;
      margin: 0;
      cursor: pointer;
      font-weight: $fw-bold;
      @include mq(medium) {
        font-size: 1.5rem;
      }

    }

    &:hover {
      filter: brightness(2);
      opacity: 1;
      transform: scale(2);
      z-index: 10;

      transition: transform 400ms ease-out;

      @include mq(medium) {
        transform: scale(1);
      }


      & h3 {
        text-overflow: initial;
        font-size: .53vw;

        @include mq(medium) {
          font-size: 1.5rem;
        }

      }
    }

    &-empty {

      @include mq(medium) {
        display: none;
      }
    }
  }

  &--nonmetal {
    @include blockColor(colors(1));
  }

  &--noblegas {
    @include blockColor(colors(8));
  }

  &--alkali {
    @include blockColor(colors(5));
  }
  &--earthmetal {
    @include blockColor(colors(6));
  }

  &--metalloid {
    @include blockColor(colors(3));
  }

  &--metal {
    @include blockColor(colors(4));
  }

  &--transitionmetal {
    @include blockColor(colors(7));
  }

  &--lathanoid {
    @include blockColor(colors(9));
  }

  &--actinoid {
    @include blockColor(colors(10));
  }

  &--halogen {
    @include blockColor(colors(2));
  }

}
